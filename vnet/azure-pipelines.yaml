# Azure DevOps pipeline for Azure deployment

variables:
- group: adotest-vg

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - ./vnet

stages:
- stage: Validate
  displayName: Validate
  jobs:
  - job: validate
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

  # Init
    - task: TerraformTaskV3@3
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
        backendServiceArm: 'atulavtx-sst2'
        backendAzureRmResourceGroupName: 'attila52526'
        backendAzureRmStorageAccountName: 'attila52526'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'ado.terraform.tfstate'
  # Validate
    - task: TerraformTaskV3@3
      displayName: Validate Config
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
- stage: Plan
  displayName: Plan
  jobs:
  - job: plan
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

  # Init
    - task: TerraformTaskV3@3
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
        backendServiceArm: 'atulavtx-sst2'
        backendAzureRmResourceGroupName: 'attila52526'
        backendAzureRmStorageAccountName: 'attila52526'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'ado.terraform.tfstate'

  # Plan
    - task: TerraformTaskV3@3
      displayName: Plan Terraform Deployment
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
        environmentServiceNameAzureRM: 'atulavtx-sst2'

# Approve
- stage: Approve
  displayName: Approve
  jobs:
  - job: approve
    displayName: Wait for approval
    pool: server
    steps: 
    - task: ManualValidation@0
      timeoutInMinutes: 60
      inputs:
        notifyUsers: 'apatel@aviatrix.com'
        instructions: 'Review the plan in the next hour'

- stage: Apply
  displayName: Apply
  jobs:
  - job: apply
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

  # Init
    - task: TerraformTaskV3@3
      displayName: Initialize Terraform
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
        backendServiceArm: 'atulavtx-sst2'
        backendAzureRmResourceGroupName: 'attila52526'
        backendAzureRmStorageAccountName: 'attila52526'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'ado.terraform.tfstate'

  # Apply
    - task: TerraformTaskV3@3
      displayName: Apply Terraform Deployment
      inputs:
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/vnet'
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: 'atulavtx-sst2'